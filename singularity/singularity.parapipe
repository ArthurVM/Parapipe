Bootstrap: docker
From: ubuntu:20.04
%labels
maintainer="morrisa28@cardiff.ac.uk"
about.summary="parasite genomics pipeline container"

%post

export DEBIAN_FRONTEND=noninteractive

python_version=3.6.5
ujson_version=3.2.0
bowtie2_version=2.3.4.1
htslib_version=1.12
samtools_version=1.12
bcftools_version=1.12
bloomine_version=0.1-alpha

PACKAGES="procps curl git build-essential wget zlib1g-dev pkg-config jq r-base-core rsync libtbb-dev autoconf libncurses-dev libbz2-dev liblzma-dev libcurl4-openssl-dev perl libjson-perl libfindbin-libs-perl cpanminus jq cmake libboost-all-dev tabix pkg-config libvcflib-tools libssl-dev libsqlite3-dev software-properties-common openjdk-11-jre-headless"
PYTHON="python2.7 python-dev python3-dev python-setuptools"

apt-get update \
&& apt-get install -y $PACKAGES $PYTHON \
&& curl -fsSL https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz | tar -xz \
&& cd Python-${python_version} \
&& ./configure --enable-optimizations \
&& make altinstall \
&& cd .. \
&& ln -s /usr/local/bin/python3.6 /usr/local/bin/python3 \
&& ln -s /usr/local/bin/pip3.6 /usr/local/bin/pip3 \
&& pip3 install --upgrade pip \
&& pip3 install ujson==${ujson_version}

pip3 install biopython

echo "install.packages(\"optparse\", repos=\"https://cran.rstudio.com\")" | R --no-save
echo "install.packages(\"ape\", repos=\"https://cran.rstudio.com\")" | R --no-save
echo "install.packages(\"vcfR\", repos=\"https://cran.rstudio.com\")" | R --no-save
echo "install.packages(\"glue\", repos=\"https://cran.rstudio.com\")" | R --no-save

python3 -m pip install --upgrade cutadapt

curl -fsSL https://sourceforge.net/projects/bowtie-bio/files/bowtie2/${bowtie2_version}/bowtie2-${bowtie2_version}-source.zip -o bowtie2-${bowtie2_version}-source.zip \
&& unzip bowtie2-${bowtie2_version}-source.zip \
&& make -C bowtie2-${bowtie2_version} prefix=/usr/local install \
&& rm -r bowtie2-${bowtie2_version} \
&& rm bowtie2-${bowtie2_version}-source.zip

curl -fsSL https://github.com/samtools/samtools/archive/${samtools_version}.tar.gz | tar -xz \
&& curl -fsSL https://github.com/samtools/htslib/releases/download/${htslib_version}/htslib-${htslib_version}.tar.bz2 | tar -xj \
&& make -C samtools-${samtools_version} -j HTSDIR=../htslib-${htslib_version} \
&& make -C samtools-${samtools_version} -j HTSDIR=../htslib-${htslib_version} prefix=/usr/local install \
&& rm -r samtools-${samtools_version} \
&& curl -fsSL https://github.com/samtools/bcftools/archive/refs/tags/${bcftools_version}.tar.gz | tar -xz \
&& make -C bcftools-${bcftools_version} -j HTSDIR=../htslib-${htslib_version} \
&& make -C bcftools-${bcftools_version} -j HTSDIR=../htslib-${htslib_version} prefix=/usr/local install \
&& rm -r bcftools-${bcftools_version}

curl -fsSL https://github.com/ArthurVM/BlooMine/archive/refs/tags/v${bloomine_version}.tar.gz | tar -xz \
&& cd BlooMine-${bloomine_version} \
&& mkdir build; cd build \
&& cmake .. \
&& make \
&& cd ..; rm -r build; cd .. \
&& mv BlooMine-${bloomine_version} BlooMine

%environment
export htslib_version=1.12
export PATH=$PATH:/strviper/scripts/
export SNPEFF_DIR=/snpEff/
export ABACAS_DIR=/ABACAS/
export LD_LIBRARY_PATH=/usr/local/lib
export LC_ALL=C.UTF-8
export LANG=C.UTF-8
export PATH=$PATH:/mauve/linux-x64/

%runscript
exec /bin/bash "$@"
%startscript
exec /bin/bash "$@"
