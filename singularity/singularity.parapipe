Bootstrap: docker
From: debian:buster
%labels
maintainer="morrisa28@cardiff.ac.uk"
about.summary="parasite genomics pipeline container"

%post

python_version=3.6.5
ujson_version=3.2.0
bowtie2_version=2.3.4.1
htslib_version=1.12
samtools_version=1.12
bcftools_version=1.12
spades_version=3.15.3
pilon_version=1.24
mummer_version=4.0.0rc1
abacas_version=1.3.1
minimap_version=2.22
liftoff_version=1.6.1
quast_version=5.0.2
trf_version=4.09.1

PACKAGES="procps curl git build-essential wget zlib1g-dev pkg-config jq r-base-core rsync libtbb-dev autoconf libncurses-dev libbz2-dev liblzma-dev libcurl4-openssl-dev perl libjson-perl libfindbin-libs-perl cpanminus jq cmake tabix pkg-config libvcflib-tools libssl-dev libsqlite3-dev software-properties-common openjdk-11-jre-headless"
PYTHON="python2.7 python-dev python3-dev python-setuptools"

apt-get update \
&& apt-get install -y $PACKAGES $PYTHON \
&& curl -fsSL https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz | tar -xz \
&& cd Python-${python_version} \
&& ./configure --enable-optimizations \
&& make altinstall \
&& cd .. \
&& ln -s /usr/local/bin/python3.6 /usr/local/bin/python3 \
&& ln -s /usr/local/bin/pip3.6 /usr/local/bin/pip3 \
&& pip3 install --upgrade pip \
&& pip3 install ujson==${ujson_version}

pip3 install biopython

echo "install.packages(\"optparse\", repos=\"https://cran.rstudio.com\")" | R --no-save
echo "install.packages(\"ape\", repos=\"https://cran.rstudio.com\")" | R --no-save
echo "install.packages(\"vcfR\", repos=\"https://cran.rstudio.com\")" | R --no-save
echo "install.packages(\"glue\", repos=\"https://cran.rstudio.com\")" | R --no-save

python3 -m pip install --upgrade cutadapt

curl -fsSL https://sourceforge.net/projects/bowtie-bio/files/bowtie2/${bowtie2_version}/bowtie2-${bowtie2_version}-source.zip -o bowtie2-${bowtie2_version}-source.zip \
&& unzip bowtie2-${bowtie2_version}-source.zip \
&& make -C bowtie2-${bowtie2_version} prefix=/usr/local install \
&& rm -r bowtie2-${bowtie2_version} \
&& rm bowtie2-${bowtie2_version}-source.zip

curl -fsSL https://github.com/samtools/samtools/archive/${samtools_version}.tar.gz | tar -xz \
&& curl -fsSL https://github.com/samtools/htslib/releases/download/${htslib_version}/htslib-${htslib_version}.tar.bz2 | tar -xj \
&& make -C samtools-${samtools_version} -j HTSDIR=../htslib-${htslib_version} \
&& make -C samtools-${samtools_version} -j HTSDIR=../htslib-${htslib_version} prefix=/usr/local install \
&& rm -r samtools-${samtools_version} \
&& curl -fsSL https://github.com/samtools/bcftools/archive/refs/tags/${bcftools_version}.tar.gz | tar -xz \
&& make -C bcftools-${bcftools_version} -j HTSDIR=../htslib-${htslib_version} \
&& make -C bcftools-${bcftools_version} -j HTSDIR=../htslib-${htslib_version} prefix=/usr/local install \
&& rm -r bcftools-${bcftools_version}

curl -fsSL http://cab.spbu.ru/files/release3.15.3/SPAdes-${spades_version}.tar.gz | tar -xz \
&& cd SPAdes-3.15.3 \
&& PREFIX=/usr/local/ ./spades_compile.sh \
&& cd ..

curl -fsSL https://github.com/broadinstitute/pilon/releases/download/v${pilon_version}/pilon-${pilon_version}.jar -o pilon-${pilon_version}.jar \
&& mv pilon-${pilon_version}.jar /usr/local/bin/

curl -fsSL https://github.com/mummer4/mummer/releases/download/v4.0.0rc1/mummer-${mummer_version}.tar.gz | tar -xz \
&& cd mummer-${mummer_version} \
&& ./configure --prefix=/usr/local/ \
&& make \
&& make install \
&& cd ..

mkdir ABACAS \
&& cd ABACAS \
&& curl -fsSL https://sourceforge.net/projects/abacas/files/abacas.${abacas_version}.pl/download -o abacas.${abacas_version}.pl \
&& curl -fsSL ftp://ftp.sanger.ac.uk/pub/resources/software/pagit/PAGIT_MissingScripts.zip -o PAGIT_MissingScripts.zip \
&& unzip PAGIT_MissingScripts.zip \
&& cd ..

curl -fsSL https://github.com/lh3/minimap2/archive/refs/tags/v${minimap_version}.tar.gz | tar -xz \
&& cd minimap2-${minimap_version} \
&& make \
&& mv minimap2 /usr/local/bin/ \
&& cd ../ \
&& rm -r minimap2-${minimap_version}

pip install liftoff

curl -fsSL https://downloads.sourceforge.net/project/quast/quast-${quast_version}.tar.gz | tar -xz \
&& cd quast-${quast_version} \
&& python3 ./setup.py install \
&& cd ..

curl -fsSL https://github.com/Benson-Genomics-Lab/TRF/archive/refs/tags/v${trf_version}.tar.gz | tar -xz \
&& cd TRF-${trf_version} \
&& mkdir build; cd build \
&& ../configure \
&& make \
&& make install \
&& cd / \
&& rm v${trf_version}.tar.gz \
&& rm -r TRF-${trf_version}

curl -fsSL http://bioinf.scmb.uq.edu.au:8080/STRViper/strviper.tar.gz -o strviper.tar.gz\
&& tar -xzf strviper.tar.gz \
&& rm strviper.tar.gz

git clone git://github.com/tanghaibao/jcvi.git \
&& cd jcvi \
&& pip install -e .

%environment
export htslib_version=1.12
export PATH=$PATH:/strviper/scripts/
export SNPEFF_DIR=/snpEff/
export ABACAS_DIR=/ABACAS/
export LD_LIBRARY_PATH=/usr/local/lib
export LC_ALL=C.UTF-8
export LANG=C.UTF-8
%runscript
exec /bin/bash "$@"
%startscript
exec /bin/bash "$@"
